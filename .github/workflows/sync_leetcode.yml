name: Sync LeetCode (named commits)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *"   # 17:00 UTC daily

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run LeetCode Sync (makes commit via API)
        uses: joshcai/leetcode-sync@v1.7
        with:
          github-token: ${{ github.token }}
          leetcode-csrf-token: ${{ secrets.LEETCODE_CSRF_TOKEN }}
          leetcode-session: ${{ secrets.LEETCODE_SESSION }}
          destination-folder: daily_challange_solutions
          verbose: true
          commit-header: "[temp-sync]"

      - name: Pull the new commit the action just pushed
        run: |
          # authenticate origin for pull/push
          git remote set-url origin "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git"
          # ensure we're on the default branch (same ref the workflow runs on)
          git checkout "${{ github.ref_name }}"
          # fetch/pull the commit created by the LeetCode Sync action
          git fetch origin "${{ github.ref_name }}"
          git pull --ff-only origin "${{ github.ref_name }}"

      - name: Determine problem name from changed files
        id: title
        shell: bash
        run: |
          if git diff --quiet HEAD~1 HEAD; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          mapfile -t FILES < <(git diff --name-only HEAD~1 HEAD | grep '^daily_challange_solutions/' || true)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          FIRST="${FILES[0]}"
          RAW_TITLE="$(basename "$FIRST")"
          RAW_TITLE="${RAW_TITLE%.*}"

          # Sanitize filename â†’ commit-safe
          TITLE="$(echo "$RAW_TITLE" | sed 's/ /_/g')"
          TITLE="$(echo "$TITLE" | sed 's/[^A-Za-z0-9_.-]//g')"

          if [ ${#FILES[@]} -gt 1 ]; then
            TITLE="${TITLE}_and_more"
          fi

          DATE="$(TZ=America/Los_Angeles date +'%Y-%m-%d')"

          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "title=$TITLE" >> "$GITHUB_OUTPUT"
          echo "date=$DATE" >> "$GITHUB_OUTPUT"

      - name: Amend commit message and push
        if: steps.title.outputs.changed == 'true'
        run: |
          NEWMSG="leetcode_${{ steps.title.outputs.title }}_${{ steps.title.outputs.date }}"
          echo "New commit message: $NEWMSG"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git commit --amend -m "$NEWMSG"
          git push --force
